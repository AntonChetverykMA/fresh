{"version":3,"sources":["components/header.js","StateContext.js","api.js","components/client/clientSearch.js","components/submit.js","components/client/client.js","components/applicants/personInfo.js","components/applicants/applicationForm.js","components/applicants/applicationsListItem.js","components/applicants/applicantsList.js","components/applicants/applicants.js","components/result.js","App.js","reportWebVitals.js","index.js"],"names":["Header","AppBar","position","Container","Toolbar","Typography","initialState","client","applicants","newApplicants","selectedApplicants","result","reducer","state","action","type","payload","DispatchContext","React","createContext","StateContext","StateProvider","children","useReducer","dispatch","Provider","value","token","BASE_URL","request","url","fetch","method","headers","Authorization","then","res","ok","Error","status","json","ClientSeacrh","useState","open","setOpen","options","setOptions","useContext","loading","length","useEffect","active","a","response","users","items","Autocomplete","autoComplete","onChange","e","id","style","width","onOpen","onClose","getOptionSelected","option","name","getOptionLabel","label","renderInput","params","TextField","variant","InputProps","endAdornment","CircularProgress","color","size","Submit","Button","onClick","applicantsIds","map","item","newApplicantsArrEdited","address","country","code","innCode","clientId","useStyles","makeStyles","theme","container","marginTop","spacing","paper","padding","submit","list","margin","paddingLeft","listStyleType","Client","classes","Box","className","Paper","component","marginBottom","email","phone","PersonInfo","setPersonInfo","personInfo","handleChange","event","target","info","Grid","direction","xs","fullWidth","title","form","flexGrow","add","radioContainer","flexDirection","select","register","display","alignItems","link","marginLeft","ApplicationForm","setIsShownForm","person","setPerson","setCountry","personInfoInitial","setInnCode","noValidate","FormControl","RadioGroup","aria-label","FormControlLabel","control","Radio","InputLabel","Select","labelId","MenuItem","Link","href","applicationInfo","uuidv4","isAdded","ApplicantsListItem","applicant","checked","setChecked","Checkbox","disabled","filtredSelectedApplicants","filter","inputProps","filtredApplicants","bind","ApplicantsList","allApplicants","data","apllicants","slice","FormGroup","root","textDecoration","Applicants","isShownForm","Result","formatedResult","JSON","stringify","undefined","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79be3492.chunk.js","sourcesContent":["import { Container, AppBar, Typography, Toolbar } from '@material-ui/core';\n\nexport const Header = () => (\n  <AppBar position='static'>\n    <Container>\n      <Toolbar>\n        <Typography>Fresh digital agency</Typography>\n      </Toolbar>\n    </Container>\n  </AppBar>\n);\n","import React, { useReducer } from 'react';\n\nconst initialState = {\n  client: null,\n  applicants: [],\n  newApplicants: [],\n  selectedApplicants: [],\n  result: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_CLIENT':\n      return {\n        ...state,\n        client: action.payload,\n      };\n    case 'SET_APPLICANTS':\n      return {\n        ...state,\n        applicants: action.payload,\n      };\n    case 'RESET_NEW_APPLICANTS':\n      return {\n        ...state,\n        newApplicants: [],\n      };\n    case 'ADD_NEW_APPLICANT':\n      return {\n        ...state,\n        newApplicants: [...state.newApplicants, action.payload],\n      };\n\n    case 'DELETE_APPLICANT':\n      return {\n        ...state,\n        newApplicants: action.payload,\n      };\n\n    case 'ADD_NEW_SELECTED_APPLICANT':\n      return {\n        ...state,\n        selectedApplicants: [...state.selectedApplicants, action.payload],\n      };\n\n    case 'DELETE_SELECETED_APPLICANT':\n      return {\n        ...state,\n        selectedApplicants: action.payload,\n      };\n\n    case 'SET_RESULT':\n      return {\n        ...state,\n        result: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const DispatchContext = React.createContext(() => {});\nexport const StateContext = React.createContext(initialState);\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>{children}</StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n\nexport default StateProvider;\n","const token =\n  'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2MDc0NjEyMDMsImV4cCI6MTYxMDA1MzIwMywicm9sZXMiOlsiUk9MRV9BRE1JTiJdLCJ1c2VybmFtZSI6ImJ5Lmhhc2tlbGwifQ.F_0yZmAbIbPuonnXiKdxI9ne77y3CCFmoe-Wygp3wIgXShDoO64cnnTBsVQG6u6VUvZt1LrueXhUnbOmVKnbUTckKKkNcQWl6iHVO-9RgP2133SOzWcSmVDpf0BC_K0lczF0DaAmp1gHii-Ct50nORpSONSbWNnjkfhBIPbyLVDR2sKuGKyMGG-6Qy0JRDTFnt5AVO_z5HEpCYSrQdhwd_wl7gcD9-vH7_aQib9dq6htbDdqdFw1NXk84B_YTfa2szSFyMDuQkaTgXZwoOOouxEHy9JlJgkKgxK5W-f84cNFkFrYxUhxaNROgPFY8Cs9pB54NcVaSceQc2vF2lgtFb3VyC-ra3xTNtrNmzGPpikftkeU8lnojP8ifEsdeYWjgJGUa7HsR-VMq2fN9otGd0PqpXLpXPasBXEvub7tRyqLziGUG_h4SdgIOu0aGe3sItigzF3fnaCc-Vv8B1wM_qt05ahCgdMuMD7X2dW0eAFuO8zKZszz7owiD5S92QiJkI2sGUG5YzPTOPjch-Qoax--aM1QE8XFDvkDYCruARDTBxcqNp6QAdEANr_toscUpcwTM5-hNfSTGaWvF0dkJaek2PCCszOWAyz6TiLy9lGXVkFEGn-qeR9V0ecdHNx9F_6YNqgWAIOlMNCsYiNp77J6ggmLjJZfTYDh6BAwFNI';\nconst BASE_URL = 'https://lexberry.com.ua/api/v1';\n\nexport const request = (url = '') => {\n  return fetch(`${BASE_URL}/${url}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: token,\n      'Access-Control-Allow-Origin': '*',\n    },\n  }).then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status}`);\n    }\n\n    return res.json();\n  });\n};\n","import { useEffect, useState, useContext } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField, CircularProgress } from '@material-ui/core';\n\nimport { DispatchContext } from '../../StateContext';\nimport { request } from '../../api';\n\nexport const ClientSeacrh = () => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const dispatch = useContext(DispatchContext);\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      const response = await request('clients');\n      const users = await response;\n\n      if (active) {\n        setOptions(users.items);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [loading]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <>\n      <Autocomplete\n        autoComplete\n        onChange={(e, value) =>\n          dispatch({ type: 'SET_CLIENT', payload: value })\n        }\n        id='asynchronous-demo'\n        style={{ width: '40%' }}\n        open={open}\n        onOpen={() => {\n          setOpen(true);\n        }}\n        onClose={() => {\n          setOpen(false);\n        }}\n        getOptionSelected={(option, value) => option.name === value.name}\n        getOptionLabel={(option) => option.label}\n        options={options}\n        loading={loading}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label='Client search'\n            variant='outlined'\n            InputProps={{\n              ...params.InputProps,\n              endAdornment: (\n                <>\n                  {loading ? (\n                    <CircularProgress color='inherit' size={20} />\n                  ) : null}\n                  {params.InputProps.endAdornment}\n                </>\n              ),\n            }}\n          />\n        )}\n      />\n    </>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport { StateContext, DispatchContext } from '../StateContext';\n\nexport default function Submit() {\n  const { newApplicants, selectedApplicants, client } = useContext(\n    StateContext\n  );\n  const dispatch = useContext(DispatchContext);\n\n  const onClick = () => {\n    const applicantsIds = selectedApplicants.map((item) => item.id);\n    const newApplicantsArrEdited = newApplicants.map((item) => ({\n      name: item.name,\n      address: item.address.address,\n      country: item.country,\n      code: item.innCode,\n    }));\n    const result = {\n      clientId: client.id,\n      applicantsIds,\n      newApplicantsArrEdited,\n    };\n\n    dispatch({ type: 'SET_RESULT', payload: result });\n  };\n\n  return (\n    <Button variant='contained' color='primary' onClick={onClick}>\n      Зберегти заявку\n    </Button>\n  );\n}\n","import { useContext } from 'react';\nimport { Box, Container, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ClientSeacrh } from './clientSearch';\nimport Submit from '../submit';\nimport { StateContext } from '../../StateContext';\n\nconst useStyles = makeStyles((theme) => ({\n  container: { marginTop: theme.spacing(1) },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  submit: {\n    marginTop: theme.spacing(2),\n  },\n  list: {\n    margin: '20px 0',\n    paddingLeft: theme.spacing(2),\n    '& li': { listStyleType: 'none' },\n  },\n}));\n\nexport const Client = () => {\n  const classes = useStyles();\n  const { client } = useContext(StateContext);\n\n  return (\n    <Box className={classes.container}>\n      <Container>\n        <Paper className={classes.paper}>\n          <Typography\n            component='h1'\n            variant='h5'\n            style={{ marginBottom: '10px' }}\n          >\n            Клієнт\n          </Typography>\n          <ClientSeacrh />\n          <Box>\n            {client ? (\n              <ul className={classes.list}>\n                <li>\n                  <b>{client.name}</b>\n                </li>\n                <li>{client.email}</li>\n                <li>{client.phone}</li>\n              </ul>\n            ) : null}\n          </Box>\n          <Box className={classes.submit}>\n            <Submit />\n          </Box>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n","import TextField from '@material-ui/core/TextField';\nimport { Grid } from '@material-ui/core';\n\nexport function PersonInfo({ setPersonInfo, country, personInfo }) {\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setPersonInfo((info) => ({ ...info, [name]: value }));\n  };\n\n  return (\n    <>\n      <Grid container direction='row' spacing={3}>\n        <Grid item xs={6}>\n          <TextField\n            value={personInfo.name}\n            id='name'\n            label='Назва'\n            name='name'\n            onChange={handleChange}\n            variant='outlined'\n            fullWidth\n          />\n        </Grid>\n\n        {country !== 'Ukraine' && (\n          <Grid item xs={6}>\n            <TextField\n              value={personInfo['name-origin']}\n              id='name-origin'\n              label='Назва мовою походження'\n              name='name-origin'\n              onChange={handleChange}\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n        )}\n      </Grid>\n\n      <Grid container direction='row' spacing={3}>\n        <Grid item xs={6}>\n          <TextField\n            value={personInfo.address}\n            id='address'\n            label='Адреса'\n            name='address'\n            onChange={handleChange}\n            variant='outlined'\n            fullWidth\n          />\n        </Grid>\n\n        {country !== 'Ukraine' && (\n          <Grid item xs={6}>\n            <TextField\n              value={personInfo['address-origin']}\n              id='address-origin'\n              label='Адреса мовою походження'\n              name='address-origin'\n              onChange={handleChange}\n              variant='outlined'\n              fullWidth\n            />\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n}\n","import { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  Box,\n  Typography,\n  Button,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  Select,\n  MenuItem,\n  Link,\n} from '@material-ui/core';\n\nimport { PersonInfo } from './personInfo';\nimport { DispatchContext } from '../../StateContext';\n\nconst useStyles = makeStyles((theme) => ({\n  title: { color: 'grey', margin: '10px 0' },\n  form: { flexGrow: 1 },\n  add: {\n    marginTop: theme.spacing(2),\n  },\n  radioContainer: { flexDirection: 'row' },\n  select: { width: '30%', margin: '20px 0' },\n  register: {\n    flexGrow: 1,\n    margin: '20px 0',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  link: {\n    marginLeft: '20px',\n  },\n}));\n\nexport function ApplicationForm({ setIsShownForm }) {\n  const classes = useStyles();\n  const dispatch = useContext(DispatchContext);\n  const [person, setPerson] = useState('Фізична особа');\n  const [country, setCountry] = useState('');\n  const personInfoInitial = {\n    name: '',\n    address: '',\n    'name-origin': '',\n    'address-origin': '',\n  };\n  const [personInfo, setPersonInfo] = useState(personInfoInitial);\n  const [innCode, setInnCode] = useState('');\n\n  const handleCountryChange = (event) => {\n    setCountry(event.target.value);\n  };\n\n  const handlePersonChange = (event) => {\n    setPerson(event.target.value);\n  };\n\n  const handleRegisterChange = (event) => {\n    setInnCode(event.target.value);\n  };\n\n  const reset = () => {\n    setCountry('');\n    setPerson('Фізична особа');\n    setInnCode('');\n    setPersonInfo(personInfoInitial);\n  };\n\n  const addNewApllicant = () => {\n    const applicationInfo = {\n      person,\n      country,\n      name: personInfo.name,\n      address: { address: personInfo.address },\n      'name-origin': personInfo['name-origin'],\n      'address-origin': personInfo['address-origin'],\n      innCode,\n      id: uuidv4(),\n      isAdded: true,\n    };\n    dispatch({ type: 'ADD_NEW_APPLICANT', payload: applicationInfo });\n    reset();\n    setIsShownForm(false);\n  };\n\n  return (\n    <Box>\n      <Typography className={classes.title}>Додати нового</Typography>\n\n      <form className={classes.form} noValidate autoComplete='off'>\n        <FormControl component='fieldset'>\n          <RadioGroup\n            aria-label='person'\n            name='person'\n            value={person}\n            onChange={handlePersonChange}\n            className={classes.radioContainer}\n          >\n            <FormControlLabel\n              value='Фізична особа'\n              control={<Radio color='primary' />}\n              label='Фізична особа'\n            />\n            <FormControlLabel\n              value='Юридична особа'\n              control={<Radio color='primary' />}\n              label='Юридична особа'\n            />\n          </RadioGroup>\n        </FormControl>\n\n        <Box>\n          <FormControl variant='outlined' className={classes.select}>\n            <InputLabel id='country-title'>Country</InputLabel>\n            <Select\n              labelId='country-title'\n              id='countru-select'\n              value={country}\n              onChange={handleCountryChange}\n              label='Country'\n            >\n              <MenuItem value={'Ukraine'}>Україна</MenuItem>\n              <MenuItem value={'USA'}>США</MenuItem>\n              <MenuItem value={'Spain'}>Іспанія</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n\n        <Box className={classes.register}>\n          <TextField\n            id='register-number'\n            label='ЄДРПОУ'\n            variant='outlined'\n            style={{ width: '40%' }}\n            value={innCode}\n            onChange={handleRegisterChange}\n          />\n          <Link\n            href='https://usr.minjust.gov.ua/content/free-search'\n            target='_blank'\n            className={classes.link}\n          >\n            Знайти в ЄДР\n          </Link>\n        </Box>\n\n        <PersonInfo\n          setPersonInfo={setPersonInfo}\n          country={country}\n          personInfo={personInfo}\n        />\n\n        <Box className={classes.add}>\n          <Button variant='outlined' color='primary' onClick={addNewApllicant}>\n            Додати\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n}\n","import { Button } from '@material-ui/core';\nimport { FormControlLabel, Checkbox } from '@material-ui/core';\nimport { useState } from 'react';\nimport { StateContext, DispatchContext } from '../../StateContext';\nimport { useContext } from 'react';\n\nexport const ApplicantsListItem = ({ applicant }) => {\n  const [checked, setChecked] = useState(false);\n  const dispatch = useContext(DispatchContext);\n  const { newApplicants, selectedApplicants } = useContext(StateContext);\n\n  const handleChange = (event) => {\n    const { checked } = event.target;\n\n    if (checked) {\n      dispatch({ type: 'ADD_NEW_SELECTED_APPLICANT', payload: applicant });\n    } else {\n      const filtredSelectedApplicants = selectedApplicants.filter(\n        (item) => item.id !== applicant.id\n      );\n\n      dispatch({\n        type: 'DELETE_SELECETED_APPLICANT',\n        payload: filtredSelectedApplicants,\n      });\n    }\n\n    setChecked(checked);\n  };\n\n  const removeItem = (id) => {\n    const filtredApplicants = newApplicants.filter((item) => item.id !== id);\n\n    dispatch({ type: 'DELETE_APPLICANT', payload: filtredApplicants });\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          disabled={applicant.isAdded}\n          checked={checked}\n          onChange={handleChange}\n          color='primary'\n          inputProps={{ 'aria-label': 'secondary checkbox' }}\n        />\n      }\n      label={\n        <>\n          <span>\n            <b>{`${applicant.name}`}</b>, {`${applicant.address.address}`}\n          </span>\n          {applicant.isAdded && (\n            <Button onClick={removeItem.bind(null, applicant.id)}>X</Button>\n          )}\n        </>\n      }\n    />\n  );\n};\n","import { FormGroup } from '@material-ui/core';\nimport { useEffect, useContext } from 'react';\nimport { request } from '../../api';\nimport { StateContext, DispatchContext } from '../../StateContext';\n\nimport { ApplicantsListItem } from './applicationsListItem';\n\nexport const ApplicantsList = () => {\n  const dispatch = useContext(DispatchContext);\n  const { client, applicants, newApplicants } = useContext(StateContext);\n  const allApplicants = [...applicants, ...newApplicants];\n\n  useEffect(() => {\n    if (client) {\n      request(`applicants/?filter[client:id]=${client.id}`).then((data) => {\n        const apllicants = data.items.slice(0, 3); //limited the number of applicants\n        dispatch({ type: 'SET_APPLICANTS', payload: apllicants });\n      });\n    } else {\n      dispatch({ type: 'SET_APPLICANTS', payload: [] });\n      dispatch({ type: 'RESET_NEW_APPLICANTS', payload: [] });\n    }\n  }, [client, dispatch]);\n\n  return (\n    <FormGroup>\n      {allApplicants.length > 0 &&\n        allApplicants.map((applicant) => (\n          <ApplicantsListItem applicant={applicant} key={applicant.id} />\n        ))}\n    </FormGroup>\n  );\n};\n","import { useState } from 'react';\nimport { Box, Container, Paper, Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ApplicationForm } from '../applicants/applicationForm';\nimport Submit from '../submit';\nimport { ApplicantsList } from './applicantsList';\n\nconst useStyles = makeStyles((theme) => ({\n  root: { marginTop: theme.spacing(1), marginBottom: theme.spacing(2) },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  add: { textDecoration: 'underline' },\n  submit: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport const Applicants = () => {\n  const classes = useStyles();\n  const [isShownForm, setIsShownForm] = useState(false);\n\n  const onClick = () => {\n    setIsShownForm(true);\n  };\n\n  return (\n    <Box className={classes.root}>\n      <Container>\n        <Paper className={classes.paper}>\n          <Typography\n            component='h2'\n            variant='h5'\n            style={{ marginBottom: '10px' }}\n          >\n            Заявники\n          </Typography>\n          <ApplicantsList />\n\n          <Button color='primary' className={classes.add} onClick={onClick}>\n            + Додати\n          </Button>\n\n          {isShownForm && <ApplicationForm setIsShownForm={setIsShownForm} />}\n\n          <Box className={classes.submit}>\n            <Submit />\n          </Box>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Box, Container, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { StateContext } from '../StateContext';\n\nconst useStyles = makeStyles((theme) => ({\n  container: { marginTop: theme.spacing(1) },\n  paper: {\n    padding: theme.spacing(2),\n  },\n}));\n\nexport const Result = () => {\n  const classes = useStyles();\n  const { result } = useContext(StateContext);\n  const formatedResult = JSON.stringify(result, undefined, 2);\n\n  return (\n    <Box className={classes.container}>\n      <Container>\n        <Paper className={classes.paper}>\n          <Typography\n            component='h2'\n            variant='h5'\n            style={{ marginBottom: '10px' }}\n          >\n            Result\n          </Typography>\n          <pre>{formatedResult}</pre>\n        </Paper>\n      </Container>\n    </Box>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport { Header } from './components/header';\nimport { Client } from './components/client/client';\nimport { Applicants } from './components/applicants/applicants';\nimport { Result } from './components/result';\nimport { StateContext } from './StateContext';\n\nfunction App() {\n  const { result } = useContext(StateContext);\n\n  return (\n    <div className='App'>\n      <Header />\n      <Client />\n      <Applicants />\n      {result && <Result />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport StateProvider from './StateContext';\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}